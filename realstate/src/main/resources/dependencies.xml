<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- RabbitMQ -->

	<bean id="rabbitMqPublisher"
		  class="com.webdev.realstate.shared.infrastructure.rabbitmq.RabbitMqPublisher"/>

	<bean id="rabbitMqEventBus"
		  class="com.webdev.realstate.shared.infrastructure.rabbitmq.RabbitMqEventBus">
		<constructor-arg ref="rabbitMqPublisher"/>
	</bean>

	<bean id="domainEventInformation"
		  class="com.webdev.realstate.shared.infrastructure.rabbitmq.DomainEventsInformation"/>

	<bean id="domainEventJsonDeserializer"
		  class="com.webdev.realstate.shared.infrastructure.rabbitmq.serializable.DomainEventJsonDeserializer">
		<constructor-arg ref="domainEventInformation"/>
	</bean>

	<bean id="RabbitMqDomainEventsConsumer"
		  class="com.webdev.realstate.shared.infrastructure.rabbitmq.RabbitMqDomainEventsConsumer">
		<constructor-arg ref="rabbitMqEventBus"/>
		<constructor-arg ref="domainEventJsonDeserializer"/>
	</bean>

	<!-- JWT -->
	<bean id="tokenGeneration"
		  class="com.webdev.realstate.shared.application.TokenGeneration"/>

	<!-- Users -->

	<bean id="userRepository"
		  class="com.webdev.realstate.users.user.infrastructure.adapters.HibernateUserRepository"/>

	<bean id="userCreator"
		  class="com.webdev.realstate.users.user.application.create.UserCreator">
		<constructor-arg ref="userRepository"/>
	</bean>

	<bean id="userLogin"
		  class="com.webdev.realstate.users.user.application.login.UserLogin">
		<constructor-arg ref="userRepository"/>
	</bean>

	<bean id="userFindAll"
		  class="com.webdev.realstate.users.user.application.find_all.UserFindAll">
		<constructor-arg ref="userRepository"/>
	</bean>

	<bean id="userFindById"
		  class="com.webdev.realstate.users.user.application.find.UserFindById">
		<constructor-arg ref="userRepository"/>
	</bean>

	<bean id="userDelete"
		  class="com.webdev.realstate.users.user.application.delete.UserDelete">
		<constructor-arg ref="userRepository"/>
	</bean>

	<bean id="userUpdate"
		  class="com.webdev.realstate.users.user.application.update.UserUpdate">
		<constructor-arg ref="userRepository"/>
	</bean>

	<!-- Appointments -->

	<bean id="AppointmentRepository"
		  class="com.webdev.realstate.appointments.appointment.infrastructure.adapters.HibernateAppointmentRepository"/>

	<bean id="AppointmentCreator"
		  class="com.webdev.realstate.appointments.appointment.application.create.AppointmentCreator">
		<constructor-arg ref="AppointmentRepository"/>
	</bean>

	<bean id="AppointmentFindByDate"
		  class="com.webdev.realstate.appointments.appointment.application.find.AppointmentFindByDate">
		<constructor-arg ref="AppointmentRepository"/>
	</bean>

	<bean id="AppointmentFindByState"
		  class="com.webdev.realstate.appointments.appointment.application.find.AppointmentFindByState">
		<constructor-arg ref="AppointmentRepository"/>
	</bean>

	<bean id="AppointmentFindByUserId"
		  class="com.webdev.realstate.appointments.appointment.application.find.AppointmentFindByUserId">
		<constructor-arg ref="AppointmentRepository"/>
	</bean>

	<!-- Requests -->

	<bean id="RequestRepository"
		  class="com.webdev.realstate.appointments.request.infrastructure.adapters.HibernateRequestRepository"/>

	<bean id="RequestCreator" class="com.webdev.realstate.appointments.request.application.create.RequestCreator">
		<constructor-arg ref="RequestRepository"/>
	</bean>

	<bean id="RequestFindByDate" class="com.webdev.realstate.appointments.request.application.find.RequestFindByDate">
		<constructor-arg ref="RequestRepository"/>
	</bean>

	<bean id="RequestFindByState" class="com.webdev.realstate.appointments.request.application.find.RequestFindByState">
		<constructor-arg ref="RequestRepository"/>
	</bean>

	<bean id="RequestFindByUserId"
		  class="com.webdev.realstate.appointments.request.application.find.RequestFindByUserId">
		<constructor-arg ref="RequestRepository"/>
	</bean>

</beans>